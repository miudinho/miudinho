# vagrant reload

# BOX_IMAGE = "boxomatic/centos-stream-9"
# BOX_IMAGE = "bento/ubuntu-20.04"
# BOX_IMAGE = "FEBO/suse12"
BOX_IMAGE = "opensuse/Tumbleweed.x86_64"
NODE_COUNT = 2

$ETC_HOSTS = <<-EOF
echo "10.0.1.100 main" > /etc/hosts
echo "10.0.1.101 node-1" >> /etc/hosts
echo "10.0.1.102 node-2" >> /etc/hosts
EOF

$SSH_KEYS = <<-EOF
rm -f /home/vagrant/.ssh/id_rs*
ssh-keygen -t rsa -b 4096 -f /home/vagrant/.ssh/id_rsa -q -P ""
curl --insecure --user vagrant:vagrant -T /home/vagrant/.ssh/id_rsa.pub sftp://node-1/home/vagrant/.ssh/authorized_keys
curl --insecure --user vagrant:vagrant -T /home/vagrant/.ssh/id_rsa.pub sftp://node-2/home/vagrant/.ssh/authorized_keys
EOF

# scp /home/vagrant/.ssh/id_rsa.pub vagrant@node-1:/home/vagrant/.ssh/
# ssh vagrant@node-1 'cat /home/vagrant/.ssh/id_rsa.pub >> /home/vagrant/.ssh/authorized_keys'
# ssh vagrant@node-1 'rm /home/vagrant/.ssh/id_rsa.pub' 


$ANS_SETUP = <<-EOF
zypper -n install -y ansible
EOF

$ANS_INVENTORY_FILE = <<-EOF
touch /etc/ansible/hosts
chmod 666 /etc/ansible/hosts
echo -e "[all]\n main\n node-1\n node-2" >> /etc/ansible/hosts


EOF

$K3S_SETUP = <<-EOF
curl -sfL https://get.k3s.io | sh -
EOF

Vagrant.configure("2") do |config|
  config.vm.define "main" do |host|
    config.vm.provider "virtualbox" do |s|
      s.memory = "4096"
      s.cpus = "4"
    end 

    host.vm.box = BOX_IMAGE
    host.vm.hostname = "main"
    # host.vm.network "public_network", 
    # bridge: [ "en3: Hyper-V Virtual Ethernet Adapter #7", "en4: Hyper-V Virtual Ethernet Adapter", ]
    
    # , bridge: "eth1", auto_config: false
    #  use_dhcp_assigned_default_route: true, 
    #  bridge: "en1: Hyper-V Virtual Ethernet Adapter" 
    host.vm.network "private_network", ip: "10.0.1.100"
    host.vm.network "private_network", ip: "192.168.57.100"
    host.vm.provision "shell", inline: $ETC_HOSTS
    # host.vm.provision "shell", inline: $SSH_KEYS
    host.vm.provision "shell", inline: $ANS_SETUP
    host.vm.provision "shell", inline: $ANS_INVENTORY_FILE
   end

  # $ETC_HOSTS = <<-EOF
  # echo "10.0.1.100 main" >> /etc/hosts
  # echo "10.0.1.101 node-1" >> /etc/hosts
  # echo "10.0.1.102 node-2" >> /etc/hosts
  # EOF

  config.vm.provision "shell", inline: $ETC_HOSTS

  
# Vagrant.configure("2") do |config|
    config.vm.define "node-1" do |host|
      host.vm.box = BOX_IMAGE
      host.vm.hostname = "node-1"
      host.vm.network "private_network", ip: "10.0.1.101"
      host.vm.network "private_network", ip: "192.168.57.101"
      host.vm.provision "shell", inline: $K3S_SETUP
      host.vm.provision "shell", inline: "sudo chmod 604 /etc/rancher/k3s/k3s.yaml"
    end

    # config.vm.provision "shell", inline: $K3S_SETUP
  
# Vagrant.configure("2") do |config|
   config.vm.define "node-2" do |host|
      host.vm.box = BOX_IMAGE
      host.vm.hostname = "node-2"
      host.vm.network "private_network", ip: "10.0.1.102"
      host.vm.network "private_network", ip: "192.168.57.102"
      host.vm.provision "shell", inline: <<-EOF 
      echo "Hello World" > /tmp/tf.txt
      echo "Hello World NEXT" >> /tmp/tf.txt
      EOF
    end
        

  config.vm.define "main" do |host|
    host.vm.provision "shell", inline: $SSH_KEYS
    host.vm.provision "shell", inline: $ANS_SETUP
    host.vm.provision "shell", inline: $ANS_INVENTORY_FILE
  end

end


